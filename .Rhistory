count +=1 
total/count
}pollutantmean <- function (directory,pollutant,id=1:332){
total = 0
count = 0
for i in id {
df =  read.csv( id +".csv")
total += df['pollutant'].sum()
count +=1 
total/count
}
getwd()
setwd(C:\Users\wengchiat-ng\Desktop\R\specdata
set.seed(1)
rpois(5, 2)
set.seed(1)
set.seed(1)
set.seed(1)
rpois(5, 2)
q()
swirl()
library(swirl)
swirl()
lk()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
ojecct.size(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail()
tail(plants)
tail(plants,15)
summary(plants)
table(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:10)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
sample(c(0,1))
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips <-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
>rbinom
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2 <- rbinom(100,size=100,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
m_pois <- replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm<-colmeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
data(cars)
>cars
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x = cars$speed, y = cars$dict)
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(y = cars$speed, x = cars$dist, xlab='Speed')
plot(x = cars$speed, y = cars$dist, xlab='Speed')
plot(x = cars$speed, y = cars$dist, xlab='Speed',ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist,ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist,xlab='Speed',ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist,xlab='Speed',ylab = 'Stopping Distance',main='My Plot')
plot(cars,main='My Plot')
plot(cars,main='My Plot',sub='My Plot Subtitle'))
plot(cars,main='My Plot',sub='My Plot Subtitle')
plot(cars,sub='My Plot Subtitle')
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?data
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
q()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls.list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange) 
flag_colors <- flags[, 11:17]
head(flag_color)
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,
| 19:23] 
flag_shapes <- flags[,19:23]
lapply(flags_shapes,max)
lapply(flag_shapes,max)
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
 unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
q()
library(swirl)
swirl()
swirl()
info()
bye()
swirl()
q()
utils:::menuInstallLocal()
library(jpeg)
utils:::menuInstallLocal()
utils:::menuInstallLocal()
library(jpeg)
library('jpeg')
chooseCRANmirror()
setRepositories()
update.packages(ask='graphics',checkBuilt=TRUE)
utils:::menuInstallPkgs()
chooseCRANmirror()
install.packages('jpeg')
swirl()
library(swirl)
swirl()
q()
library(swirl)
swirl()
head(airquality)
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm,col='blue')
a
abline(ppm, h=12_
abline(ppm, h=12)
?abline
abline(h=12)
hist(ppm,col='green')
rug(ppm)
high
low
high
hist(ppm,col='green',breaks=100)
rug(ppm)
hist(ppm,col='green')
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=4,col = 'magenta;)
abline(v=median(ppm), lwd=4,col = 'magenta')
abline(v=median(ppm), lwd=4,col = 'magenta')
abline(v=median(ppm),col = 'magenta', lwd=4)
pollution
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col='wheat',main ='Number of Counties in Each Region')
boxplot(pm25¬region, data=pollution,col='red')
boxplot(pm25~region, data=pollution,col='red')
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution,'east')
east <- subset(pollution,'east')
?subset
east <- subset(pollution,'east')
east 
subset(pollution,select='east')
east <- subset(pollution,'east',region)
east <- subset(pollution,'east',seelct=region)
info()
skip()
east <- subset(pollution,region=='east')
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col='green')
west <- subset(pollution,region=='west')
hist(subset(pollution,region=='west'),col='green')
hist(subset(pollution,region=='west')$pm25,col='green')
with(pollution,plot(lattitude,pm25))
with(pollution,plot(latitude,pm25))
abline(h=12)
abline(h=12,lwd=2,lty=2))
abline(h=12,lwd=2,lty=2))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, ppm)
plot(pollution$latitude, ppm,col=pollution$region))
plot(pollution$latitude, ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
with(pollution, hist(latitudes, pm25))
with(pollution, hist(latitude, pm25))
with(pollution, scatter(latitudes, pm25))
with(pollution, scatter(latitude, pm25))
with(pollution, scatterplot(latitude, pm25))
west<-subset(pollution,region=='west')
plot(west$latitude,west$pm25,main='West')
west<-subset(pollution,region=='west')
plot(east$latitude,east$pm25,main='East')
?Devices
plot(dataset,faithful)
faithful
with(faithful,plot(eruptions, waiting))
plot(main='Old Faithful Geyser data')
title(main='Old Faithful Geyser data')
dev.cur()
pdf(file='myplot.pdf')
plot(main='Old Faithful Geyser data')
with(faithful,plot(eruptions, waiting))
plot(main='Old Faithful Geyser data')
title(main='Old Faithful Geyser data')
dec.cur()
dev.cur()
dev.off
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main='Old Faithful Geyser data')
dev.copy(png,'geyserplot.png')
dev.copy(png,'geyserplot.png')
dev.copy(png,file='geyserplot.png')
dev.off()
q()
library(swirl)
rm(list=ls())
ls()
swirl()
INFO()
info()
bye()
swirl()
head(cars)
with(cars,plot(speed,dist))
text(x = mean(cars$speed), y = max(cars$dist), 'SWIRL rules!')
head(state)
state$region
table(state$region)
xyplot(Life.Exp~Income|region,data=state,c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
q()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na,rm=True)
range(airquality$Ozone,na.rm=True)
range(airquality$Ozone,na.rm=TRUE)
range(airquality$Ozone)
hist(airquality$Ozaone)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airqualilty)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality,xlab="Month",ylab="Ozone",col.axis='blue',col.lab='red')
boxplot(Ozone~Month, airquality,xlab="Month",ylab="Ozone (ppb)",col.axis='blue',col.lab='red')
title('Ozone and Wind n New York City')
title(main='Ozone and Wind n New York City')
title(main='Ozone and Wind in New York City')
with(airquality,plot)
with(airquality,plot(Wind,Ozone)
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone,main="Ozone and Wing in New York City"))
title=(main="Ozone and Wing in New York City"))
title(main="Ozone and Wing in New York City"))
title(main="Ozone and Wing in New York City")
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par('fg')
par('pch')
par('lty')
plot(airquality$Wind,airquality$Ozone,type='n')
title(main='Wind and Ozone in NYC')
may = airquality[airquality$Month==5]
may = airquality[[airquality$Month==5]]
may = airquality[[airquality$Months==5]]
may = airquality[airquality$Months==5]
may = airquality[airquality$Month==5]
may = subset(airquality, Month==5)
may <- subset(airquality, Month==5)
points(may)
points(may,col='blue',pch=17)
points(may$Wind,may$Ozone,col='blue',pch=17)
notmay <- subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col='red',pch=17)
points(notmay$Wind,notmay$Ozone,col='red',pch=8)
legend('topright',c(17,8),c('b','r'),c('May','Other Monhts'))
legend('topright',c(17,8),c('blue','red'),c('May','Other Monhts'))
legend('topright',pch=c(17,8),col=c('blue','red'),legene=c('May','Other Monhts'))
legend('topright',pch=c(17,8),col=c('blue','red'),c('May','Other Monhts'))
legend('topright',pch=c(17,8),col=c('blue','red'),legend=c('May','Other Monhts'))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
line(median(airquality$Wind, lty='dashed',lwd=2_
line(median(airquality$Wind, lty='dashed',lwd=2)
line(median(airquality$Wind, lty='dashed',lwd=2))
line(median(airquality$Wind, lty='dashed',lwd=2))
abline(v=median(airquality$Wind, lty='dashed',lwd=2))
abline(v=median(airquality$Wind), lty='dashed',lwd=2)
abline(v=median(airquality$Wind), lty=2,lwd=2)
par('mfrow')=c(1,2)
par("mfrow")=c(1,2)
par()$mfrow=c(1,2)
par()$mfrow<-c(1,2)
par('mfrow')<-c(1,2)
par('mfrow')
par('mfrow'=c(1,2))
plot(airquality$Wind,airquality$Ozone,main='Ozone and Wind')
plot(airquality$Ozone,airquality$Solar.R,main='Ozone and Wind')
plot(airquality$Ozone,airquality$Solar.R,main='Ozone and Solar Radiation')
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main='Ozone and Wind')
plot(airquality$Ozone,airquality$Solar.R,main='Ozone and Solar Radiation')
plot(airquality$Solar.R,main='Ozone and Solar Radiation')
plot(airquality$Solar.R,airquality$Ozone,main='Ozone and Solar Radiation')
plot(airquality$Temp,airquality$Ozone,main='Ozone and Temperature')
mtext('Ozone and Weather in New York City',outer=TRUE)
rm(list=ls())
ls
ls()
getwd()
ls()
dir()
data<-read_csv('household_power_consumtpion.txt')
data<-read_txt('household_power_consumtpion.txt')
data<-read('household_power_consumtpion.txt')
data<-read.txt('household_power_consumtpion.txt')
data<-read.table('household_power_consumtpion.txt')
data<-read.table('household_power_consumption.txt')
head(data)
data<-read.csv('household_power_consumption.txt',sep=';')
head(data)
data$Date <- as.Date(data$Date)
head(data)
str(data)
data$Date <- as.Date(data$Date,"%Y-%M-%D)
data$Date <- as.Date(data$Date,"%Y-%M-%D")
data$Date <- as.Date(data$Date,"%Y-%M-%D")
head(data)
data<-read.csv('household_power_consumption.txt',sep=';')
head(data)
data$Date > '01/01/2007'
str(data)
data$Date <- as.Date(data$Date,"%Y-%M-%D")
str(data)
head(data)
data<-read.csv('household_power_consumption.txt',sep=';')
head(data)
str(data)
date <- data$Date
date <- strptime(date)
date <- strptime(date,'%y%mm%dd'))
date <- strptime(date,'%y%mm%dd')
date
date
date <- data$Date
date
year(date[1])
date[1]
str(data)
date <- as.Date(date,%d%m%Y')
date <- as.Date(date,'%d%m%Y')
str(date)
date <- data$Date
date <- as.Date(date,'%dd-%mm-%yyyy')
str(date)
date <- data$Date
date <- as.Date(date,'%dd/%mm/%yyyy')
str(date)
date <- data$Date
date <- as.Date(date,'%dd/%m/%yyyy')
str(date)
class(date)
summary(date)
date <- as.Date(date,'%dd/%mm/%yyyy')
date <- data$Date
summary(date)
date <- as.Date(date,formate ='%dd/%m/%yyyy')
summary(date)
class(date)
str(date)
head(data)
?read.csv
data<-read.table('household_power_consumption.txt',sep=';',colClasses = 'numeric')
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','Time',rep('numeric',7))
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','Time',rep('numeric',7)))
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','Time',rep('numeric',7)))
rep(a,7)
rep('a',7)
class(rep('a',7))
vector(rep('a',7)))
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','Time','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data<-read.table('household_power_consumption.txt',sep=';',colClasses = c('Date','Time','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data
str(data)
data<-read.csv('household_power_consumption.txt',sep=';',colClasses = c('Date','Time','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data<-read.csv('household_power_consumption.txt',sep=';',colClasses = c('Date','Time','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),na.strings='?')
str(data)
data<-read.csv('household_power_consumption.txt',sep=';',colClasses = c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),na.strings='?')
data<-read.csv('household_power_consumption.txt',sep=';',colClasses = c('Date','Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),na.strings='?')
data<-read.csv('household_power_consumption.txt',sep=';')
date <- data$Date
date <- as.Date(date,formate ='%d/%B/%Y')
date <- data$Date
date
date <- as.Date(date,formate ='%d/%m/%Y')
date
date <- data$Date[1]
date
class(date)
date <- as.character(date)
class(date)
date
date <- as.Date(date,formate ='%d/%m/%Y')
date
date <- data$Date[1]
date <- as.character(date)
date
date2 <- as.Date(date,format ='%d/%m/%Y')
date2
date <- data$Date
date2 <- as.Date(date,format ='%d/%m/%Y')
date2
data$Date <- as.Date(data$Date,format ='%d/%m/%Y')
xlass(Date)
class(Date)
class(data)
str(data)
?as.Time
??as.Time
??as.dateTime
?as.dateTime
?as.date
?as.Date
time_ <- date$Time
time_ <- data$Time
time_ <- strptime(time_, format='%H:%M:%S
')
class(time_)
time_
time_ <- strptime(data$Time, format='%H:%M:%S')
time_ <- as.Fate(data$Time, format='%H:%M:%S')
time_ <- as.Date(data$Time, format='%H:%M:%S')
head(time_)
Sys.time
Sys.time()
time_ <- strptime(data$Time, format='%H:%M:%S
time_ <- strptime(data$Time, format='%H:%M:%S')
time_ <- strptime(data$Time, format='%H:%M:%S')
head(time-)
head(time_)
time_ <- as.Date(data$Time, format='%H:%M:%S')
head(time_)
head(data$time)
head(data$Time)
time_ <- format(strptime(data$Time, format='%H:%M:%S'),format='%H:%M:%S')
head(time_)
data$Time_ <- format(strptime(data$Time, format='%H:%M:%S'),format='%H:%M:%S')
data$Time <- format(strptime(data$Time, format='%H:%M:%S'),format='%H:%M:%S')
str(data)
del data$Time_
rm(data$Time_)
rm(list=data$Time_)
q()
q()
